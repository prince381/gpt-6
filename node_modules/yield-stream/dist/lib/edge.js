import{compose as c,generateArray as s}from"./shared.js";const t=(e,a)=>new ReadableStream({async start(n){for await(const r of e(a))n.enqueue(r);n.close()}}),d=(e,...a)=>{const n=c(...a);return t(async function*(){for await(const r of o(e))yield*n(r)})},f=e=>t(s(e)),o=async function*(e,a){const n=e.getReader();for(;!a?.signal.aborted;){const{done:r,value:u}=await n.read();if(r)break;yield u}},C=async function*(e){const a=[];for await(const n of o(e))a.push(n),yield a};export{C as buffer,t as generateStream,d as pipeline,f as streamArray,o as yieldStream};
